<!DOCTYPE html>
<html lang="ru">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.css">
	<script
		src="https://code.jquery.com/jquery-3.4.1.min.js"
		integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
		crossorigin="anonymous">
	</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.4.1/semantic.min.js"></script>
	<script text="text/javascript" src="/static/src/jqueryMergeTable.js"></script>
	<title>RTU Schedule</title>
</head>
<body>
	<div class="container" style="padding: 20px; margin: 0 20px">
		<div class="ui menu">
			<div class="header item">RTU Schedule</div>
			<a class="active item" href="/">Расписание</a>
			<a class="item" href="/search">Поиск</a>
		</div>
		<h4>Расписание группы</h4>
		<div class="ui compact form">
			<div class="fields">
				<div class="ui search field">
					<div class="ui icon input">
						<input class="prompt" type="text" placeholder="Название группы...">
						<i class="search icon"></i>
					</div>
					<div class="results"></div>
				</div>
				<!-- <button class="ui primary button field" onclick="$(this).toggleClass('basic')">Нечетная</button> -->
				<div class="ui buttons">
					<button class="ui primary button odd">Нечетная</button>
					<button class="ui basic primary button even">Четная</button>
				</div>

				<div class="ui floating dropdown icon teal right floated button">
					<!-- <div class="text">Settings</div> -->
					<i class="wrench icon"></i>
					
					<div class="menu">
						<div class="ui form" style="padding: 10px">
							<div class="grouped fields">
								<!-- <div class="ui toggle soft-merge checkbox item field">
									<input type="checkbox" checked="checked">
									<label>Упрощенный вид</label>
								</div> -->
								<div class="ui toggle merge-cells checkbox item field">
									<input type="checkbox" checked="checked">
									<label>Объединить ячейки</label>
								</div>
							<!-- </div> -->
							<!-- <div class="fields"> -->
								<div class="ui toggle show-all-days checkbox item field">
									<input type="checkbox">
									<label>Показать все дни</label>
								</div>
								<div class="ui toggle show-all-classes checkbox item field">
									<input type="checkbox">
									<label>Показать все пары</label>
								</div>
							</div>
							<div class="grouped fields">
								<label for="style">Стиль таблиц</label>
								<div class="field">
									<div class="ui radio checkbox">
										<input type="radio" name="style" checked="checked" value="0">
										<label for="style">Обычный</label>
									</div>
								</div>
								<div class="field">
									<div class="ui radio checkbox">
										<input type="radio" name="style" value="1">
										<label for="style">Простой</label>
									</div>
								</div>
								<div class="field">
									<div class="ui radio checkbox">
										<input type="radio" name="style" value="2">
										<label for="style">Упрощенный</label>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<div class="ui stackable two column grid" id="schedule" style="margin-top: 10px;">

		</div>
	</div>
</body>
</html>
<script>
const weekDays = [
    'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота', //'Воскресенье'
]

function drawSchedule(schedule, evenness, options = { allClasses: true, allDays: true, merge: true }) {
	$("#schedule").html('');

	let iterationDays =  options.allDays ? weekDays : (Object.keys(schedule[evenness]).map(elem => [weekDays[+elem], elem]) || weekDays);
	
	iterationDays.forEach((weekDay, index) => {
		if (!options.allDays) {
			[weekDay, index] = [weekDay[0], weekDay[1]];
		}
		let colElem = $(`
			<div class="column">
				<h3 class="header">${weekDay}</h3>
				<table class="ui compact unstackable
					${ $(".merge-cells.checkbox").checkbox("is unchecked") ? 'striped' : '' }
					${ ['', 'basic', 'very basic'][+$("input[name=style]:checked").val()] } table" id="table-${index}">
					<thead>
						<tr>
							<th>#</th>
							<th><i class="wait icon"></i></th>
							<th><i class="book icon"></i></th>
							<th><i class="map icon"></i></th>
							<th class="mobile-hidden-critical"><i class="user icon"></i></th>
						</tr>
					</thead>
					<tbody>
					</tbody>
				</table>
			</div>
		`);
		schedule.timeOfClass.forEach((timeObj, trInd) => {
			// console.log(classObj);
			if (schedule[evenness]['' + index] !== undefined && schedule[evenness]['' + index]['' + trInd] !== undefined) {
				let classObj = schedule[evenness]['' + index]['' + trInd];
				colElem.find("tbody").append(`
					<tr id=table-${index}-${trInd}>
						<td>${timeObj.classNumber}</td>
						<td>${timeObj.time[0]} - ${timeObj.time[1]}</td>
						<td>${classObj.name}</td>
						<td>${classObj.classRoom || '-'}</td>
						<td class="mobile-hidden-critical">${classObj.teacher || '-'}</td>
					</tr>
				`);
			}
			else
				if (options.allClasses) {
					colElem.find("tbody").append(`
						<tr id=table-${index}-${trInd}>
							<td>${timeObj.classNumber}</td>
							<td>${timeObj.time[0]} - ${timeObj.time[1]}</td>
							<td>-</td>
							<td>-</td>
							<td class="mobile-hidden-critical">-</td>
						</tr>
					`);
				}
		});
		$('#schedule').append(colElem)
	});
	if (options.merge)
		$(".table").mergeTable();
}

$(document).ready(function() {
	// let baseUrl = 'https://rtu-schedule.herokuapp.com/api/';
	let baseUrl = '/db';
	let savedSchedule = {};

	const redraw = () => {
			drawSchedule(savedSchedule, $(".basic").index() === 0 ? 'II' : 'I', {
				allDays: $(".show-all-days.checkbox").checkbox('is checked'),
				allClasses: $(".show-all-classes.checkbox").checkbox('is checked'),
				merge: $(".merge-cells.checkbox").checkbox('is checked'),
			});
		}

	$(".odd, .even").click(function() {
		$(".odd").toggleClass("basic");
		$(".even").toggleClass("basic");
		// console.log($(".basic").index());
		if (Object.keys(savedSchedule).length !== 0)
			redraw()
	})

	$(".dropdown").dropdown({
		action: 'nothing',
		transition: 'drop'
	});
	
	$(".show-all-days.checkbox").checkbox({ onChange: redraw });
	$(".show-all-classes.checkbox").checkbox({ onChange: redraw });
	$(".merge-cells.checkbox").checkbox({ onChange: redraw });

	$(".radio.checkbox").checkbox({ onChange: redraw });
	
	fetch(`${baseUrl}/allGroups`, { method: 'GET' }).then(data => data.json())
		.then(data => data.groupnames.map(i => { return { title: i } }))
		.then(groups => groups.map((gr, inx) => { return { ...gr, id: inx } })) // for no-overlapping ids in the semantic ui search
		.then(groups => {
			$('.ui.search').search({
				source: groups,
				onSelect: function(result, response) {
					
					let sameGroupSelect = response.length > 1 ? response.filter(gr => gr.title === result.title).findIndex(gr => gr.id === result.id) : -1;

					// let sameGroupSelect = response.length > 1 && new Set(response.map(r => r.title)).size == 1 ? response.findIndex(gr => gr.id === result.id) : -1;

					// console.log(sameGroupSelect);
					
					fetch(`${baseUrl}/${result.title}${sameGroupSelect > -1 ? `?groupSelect=${sameGroupSelect}`: ''}`, { method: 'GET' }).then(data => data.json())
					.then(schedule => {
						savedSchedule = schedule;
						redraw();
					});

                    // return false;
				}
			})
		});
	
	// $('.ui.search').search({
	// 		// change search endpoint to a custom endpoint by manipulating apiSettings
	// 	apiSettings: {
	// 		onResponse: function(serverRes) {
	// 			// console.log(serverRes);
	// 			let response = { results : [] };
	// 			response.results = serverRes.groupnames.map(i => { return { item: i } });
	// 			console.log(response);
	// 			return response;
	// 		},
	// 		url: 'https://rtu-schedule.herokuapp.com/api/allGroups'
	// 		},
	// });
});
</script>